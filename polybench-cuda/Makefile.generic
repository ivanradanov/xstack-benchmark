RUN_TIMEOUT?=1200 # 20 mins
CUDAFE=/u/zujunt/noelle-workspace/CudaFE
LLVM18=/u/NAS_SCRATCH/yc0769/xstack/xstack-installs/polygeist-llvm-install
POLYGEIST=/u/NAS_SCRATCH/yc0769/xstack/xstack-installs/polygeist-install
NOELLE=/u/NAS_SCRATCH/yc0769/xstack/xstack-installs/noelle-susan/install
SPLENDID_CPU=/u/NAS_SCRATCH/yc0769/xstack/llvm-install-release/bin/splendid
SPLENDID_GPU=/u/NAS_SCRATCH/yc0769/xstack/llvm-install-debug/bin/splendid
#SPLENDID_CPU=splendid
#SPLENDID_GPU=splendid
#SPLENDID_ACC=splendid


gcc_nvtarget.exe: #${BMARK}_cpu.cbe.c
	gcc -foffload=nvptx -g -fopenmp ${BMARK}_gpu.c -foffload-options=-lm -O3 -c -o ${BMARK}_nvtarget.o
	gcc -foffload=nvptx ${BMARK}_nvtarget.o -lgomp -foffload-options=-lm -O3 -lm -o $@

gcc_nvtarget_noelle.exe: #${BMARK}_cpu.cbe.c
	gcc -g -fopenmp ${BMARK}_gpu_noelle.c -O3 -c -o ${BMARK}_nvtarget.o
	gcc ${BMARK}_nvtarget.o -lgomp -O3 -lm -o $@
gcc_amdtarget.exe: #${BMARK}_cpu.cbe.c
gcc_amdtarget_noelle.exe: #${BMARK}_cpu.cbe.c

nvtarget.exe: #${BMARK}_cpu.cbe.c
	clang -g -fopenmp -fopenmp-cuda-mode -Rpass=openmp-opt -Rpass-analysis=openmp-opt -Rpass-missed=openmp-opt -fopenmp-assume-no-thread-state -fopenmp-assume-no-nested-parallelism --offload-arch=native ${BMARK}_gpu.c -O3 -c -o ${BMARK}_nvtarget.o
	clang -g --offload-link ${LLVM_LIBS_DIR}/libomptarget.so ${LLVM_LIBS_DIR}/libomp.so ${BMARK}_nvtarget.o -O3 -lm -o $@ -foffload-lto ${LLVM_LIBS_DIR}/libomptarget.devicertl.a

nvtarget_noelle.exe: #${BMARK}_cpu.cbe.c
	clang -g -fopenmp -fopenmp-cuda-mode -Rpass=openmp-opt -Rpass-analysis=openmp-opt -Rpass-missed=openmp-opt -fopenmp-assume-no-thread-state -fopenmp-assume-no-nested-parallelism --offload-arch=native ${BMARK}_gpu_noelle.c -O3 -c -o ${BMARK}_nvtarget.o
	clang -g --offload-link ${LLVM_LIBS_DIR}/libomptarget.so ${LLVM_LIBS_DIR}/libomp.so ${BMARK}_nvtarget.o -O3 -lm -o $@ -foffload-lto ${LLVM_LIBS_DIR}/libomptarget.devicertl.a

# make a ROCM_PATH var in xstack-env.rc
amdtarget.exe: #${BMARK}_cpu.cbe.c
	clang -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa -Xopenmp-target=amdgcn-amd-amdhsa -march=gfx90a --rocm-path=/opt/rocm-5.4.1/ -fopenmp-cuda-mode -Rpass=openmp-opt -Rpass-analysis=openmp-opt -Rpass-missed=openmp-opt -fopenmp-assume-no-thread-state -fopenmp-assume-no-nested-parallelism ${BMARK}_gpu.c -O3 -c -o ${BMARK}_amdtarget.o
	clang --offload-link $(FLAGS) ${LLVM_LIBS_DIR}/libomp.so ${LLVM_LIBS_DIR}/libomptarget.so ${BMARK}_amdtarget.o ${LLVM_LIBS_DIR}/libomptarget.devicertl.a -O3 -o $@

amdtarget_noelle.exe: #${BMARK}_cpu.cbe.c
	clang -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa -Xopenmp-target=amdgcn-amd-amdhsa -march=gfx90a --rocm-path=/opt/rocm-5.4.1/ -fopenmp-cuda-mode -Rpass=openmp-opt -Rpass-analysis=openmp-opt -Rpass-missed=openmp-opt -fopenmp-assume-no-thread-state -fopenmp-assume-no-nested-parallelism ${BMARK}_gpu_noelle.c -O3 -c -o ${BMARK}_amdtarget.o
	clang --offload-link $(FLAGS) ${LLVM_LIBS_DIR}/libomp.so ${LLVM_LIBS_DIR}/libomptarget.so ${BMARK}_amdtarget.o ${LLVM_LIBS_DIR}/libomptarget.devicertl.a -O3 -o $@

openacc.gpu.exe:
	nvc -acc=gpu -gpu=cc70 -Minfo=accel -O3 ${BMARK}_openacc.c -o $@

openacc.cpu.exe:
	nvc -acc=multicore -Minfo=accel -O3 ${BMARK}_openacc.c -o $@

nvhpc.gpu.noelle.exe:
	nvc -mp=gpu -gpu=cc70 -Minfo=accel -Mneginfo -O4 -fast ${BMARK}_gpu_noelle.nvc.c -o $@

nvhpc.gpu.exe:
	nvc -mp=gpu -gpu=cc70 -Minfo=accel -Mneginfo -O4 -fast ${BMARK}_gpu.nvc.c -o $@

nvhpc.cpu.noelle.exe:
	nvc -mp=multicore -Minfo=accel -O4 -fast ${BMARK}_gpu_noelle.nvc.c -o $@

nvhpc.cpu.exe:
	nvc -mp=multicore -Minfo=accel -O4 -fast ${BMARK}_gpu.nvc.c -o $@

%.ll: ${BMARK}.cu
	clang -Xclang -disable-O0-optnone -S -emit-llvm -g $<

${BMARK}_linked.bc: ${BMARK}-cuda-nvptx64-nvidia-cuda-sm_20.ll ${BMARK}.ll
	llvm-link-cudafe ${BMARK}-cuda-nvptx64-nvidia-cuda-sm_20.ll ${BMARK}.ll -o ${BMARK}_linked.bc

${BMARK}_cpu.bc: ${BMARK}_linked.bc
	#opt -load ${CUDAFE}/build/MergeKernel/libLLVMCudaFE.so -merge-kernel ${BMARK}_linked.bc -o ${BMARK}_cpu.bc 2> debug_cudafe
	opt -load ${CUDAFE}/build/MergeKernel/libLLVMCudaFE.so -merge-kernel -mem2reg -indvars -dce ${ADDITIONAL_PASSES} ${BMARK}_linked.bc -o ${BMARK}_cpu.bc 2> debug_cudafe

${BMARK}_openacc.c: ${BMARK}_cpu.bc
	$(SPLENDID_ACC) $< 2> debug
	cp ${BMARK}_cpu.cbe.c $@

#${BMARK}_pdg_embed.bc:${BMARK}_cpu.bc
#	noelle-load -PDGAnalysis -noelle-pdg-verbose=3 -noelle-pdg-embed ${BMARK}_svf.bc -o $@

${BMARK}_loopid.bc: ${BMARK}_cpu.bc
	noelle-meta-loop-embed $< -o $@
	noelle-parallel-load -load ${NOELLE}/lib/Planner.so -planner $@ -o $@ 


${BMARK}_reduced.bc: ${BMARK}_loopid.bc
	noelle-load -load ${NOELLE}/lib/ParallelizationTechnique.so -load ${NOELLE}/lib/DOALL.so -load ${NOELLE}/lib/DSWP.so -load ${NOELLE}/lib/Heuristics.so -load ${NOELLE}/lib/Parallelizer.so -load ${CUDAFE}/build/NoelleDOALL/libNoelleDOALL.so -noelle-verbose=3 -noelle-doall ${ADDITIONAL_PASSES}  $< -o $@

polygeist_nvtarget.exe: ${BMARK}.cu
	${POLYGEIST_DIR}/bin/cgeist --std=c++17 -O3 --cuda-lower -gpu-kernel-structure-mode=block_thread_noops --enable-buffer-elim=0 -raise-scf-to-affine -resource-dir=${POLYGEIST_LLVM_DIR}/lib/clang/18/ -emit-cuda --cuda-gpu-arch=$(POLYGEIST_CUDA_GPU_ARCH) --cuda-path=$(POLYGEIST_CUDA_PATH) $< -c -o polynv.o
	clang polynv.o -O3 -lm -o $@ -lstdc++ -L${POLYGEIST_CUDA_PATH}/lib64/ -lcudart_static -lpthread -ldl -lrt

polygeist_amd.exe: ${BMARK}.cu
	${POLYGEIST_DIR}/bin/cgeist --std=c++17 -O3 --cuda-lower -gpu-kernel-structure-mode=block_thread_noops --enable-buffer-elim=0 -raise-scf-to-affine -resource-dir=${POLYGEIST_LLVM_DIR}/lib/clang/18/ -emit-rocm --rocm-path=${POLYGEIST_ROCM_PATH} --amd-gpu-arch=${POLYGEIST_AMD_GPU_ARCH} --cuda-gpu-arch=$(POLYGEIST_CUDA_GPU_ARCH) --cuda-path=$(POLYGEIST_CUDA_PATH) $< -c -o polyamd.o
	clang polyamd.o -O3 -lm -o $@ -lstdc++ -L${POLYGEIST_ROCM_PATH}/lib/ -lamdhip64 -lpthread -ldl -lrt

${BMARK}.o: ${BMARK}.cu
	${POLYGEIST}/bin/cgeist --cuda-lower -cpuify="distribute" -raise-scf-to-affine --inner-serialize=1 -resource-dir=${LLVM18}/lib/clang/18/ -O3 $< -c -o $@

polygeist.exe: ${BMARK}.o
	clang -fopenmp -O3 $< -o $@

tulip.icx.noelle.exe: ${BMARK}_cpu_noelle.c
	icx -fopenmp -O3 $(FLAGS) $< -o $@

tulip.clang.noelle.exe: ${BMARK}_cpu_noelle.c
	clang -fopenmp -O3 $(FLAGS) $< -o $@

tulip.gcc.noelle.exe: ${BMARK}_cpu_noelle.c
	gcc -fopenmp -O3 $< -o $@ $(FLAGS)

tulip.icx.exe: ${BMARK}_cpu.c
	icx -fopenmp -O3 $(FLAGS) $< -o $@

tulip.clang.exe: ${BMARK}_cpu.c
	clang -fopenmp -O3 $(FLAGS) $< -o $@

tulip.gcc.exe: ${BMARK}_cpu.c
	gcc -fopenmp -O3 $< -o $@ $(FLAGS)

cpu.exe: ${BMARK}_reduced.bc
	clang -O3 -lm  $< -o $@

seq.exe: ${BMARK}.c
	clang -O3 -lm $< -o $@

cuda.exe: ${BMARK}.cu
	nvcc -O3 $< -o $@

clang_cuda.exe: ${BMARK}.cu
	clang -O3 --std=c++17 --cuda-path=$(POLYGEIST_CUDA_PATH) --cuda-gpu-arch=$(POLYGEIST_CUDA_GPU_ARCH) -c $< -o temp.o
	clang temp.o --std=c++17  -L${POLYGEIST_CUDA_PATH}/lib64/ -lcudart_static -lpthread -ldl -lrt -o $@

hip.exe: ${BMARK}_hip.cpp
	hipcc -O3 --std=c++17 -x hip --rocm-path=$(POLYGEIST_ROCM_PATH) --offload-arch=$(POLYGEIST_AMD_GPU_ARCH) -c $< -o temp.o
	hipcc temp.o --std=c++17  -L$(POLYGEIST_ROCM_PATH)/lib/ -lamdhip64 -lpthread -ldl -lrt -o $@

clang_hip.exe: ${BMARK}_hip.cpp
	clang -O3 --std=c++17 -x hip --rocm-path=$(POLYGEIST_ROCM_PATH) --offload-arch=$(POLYGEIST_AMD_GPU_ARCH) -c $< -o temp.o
	clang temp.o --std=c++17  -L$(POLYGEIST_ROCM_PATH)/lib/ -lamdhip64 -lpthread -ldl -lrt -o $@

run_seq: seq.exe
	regressions-watchdog $(RUN_TIMEOUT) seq.time ./seq.exe $(PERF_ARGS)

run_clang_cuda: clang_cuda.exe
	regressions-watchdog $(RUN_TIMEOUT) clang_cuda.time ./clang_cuda.exe $(PERF_ARGS)

run_clang_hip: clang_hip.exe
	regressions-watchdog $(RUN_TIMEOUT) clang_hip.time ./clang_hip.exe $(PERF_ARGS)

run_cuda: cuda.exe
	regressions-watchdog $(RUN_TIMEOUT) cuda.time ./cuda.exe $(PERF_ARGS)

run_hip: hip.exe
	regressions-watchdog $(RUN_TIMEOUT) hip.time ./hip.exe $(PERF_ARGS)

clean_nvtarget:
	rm nvtarget.exe nvtarget_noelle.exe || true

run_clang_nvidia: clean_nvtarget nvtarget.exe nvtarget_noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) clang_nvidia.time ./nvtarget.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) clang_nvidia.noelle.time ./nvtarget_noelle.exe $(PERF_ARGS)

run_aomp_nvidia: clean nvtarget.exe nvtarget_noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) aomp_nvidia.time ./nvtarget.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) aomp_nvidia.noelle.time ./nvtarget_noelle.exe $(PERF_ARGS)

run_gcc_nvidia: gcc_nvtarget.exe gcc_nvtarget_noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) gcc_nvidia.time ./gcc_nvtarget.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) gcc_nvidia.noelle.time ./gcc_nvtarget_noelle.exe $(PERF_ARGS)

clean_amdtarget:
	rm amdtarget.exe amdtarget_noelle.exe || true

run_clang_amd: clean_amdtarget amdtarget.exe amdtarget_noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) clang_amd.time ./amdtarget.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) clang_amd.noelle.time ./amdtarget_noelle.exe $(PERF_ARGS)

run_aomp_amd: clean amdtarget.exe amdtarget_noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) aomp_amd.time ./amdtarget.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) aomp_amd.noelle.time ./amdtarget_noelle.exe $(PERF_ARGS)

run_gcc_amd: gcc_amdtarget.exe gcc_amdtarget_noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) gcc_amd.time ./gcc_amdtarget.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) gcc_amd.noelle.time ./gcc_amdtarget_noelle.exe $(PERF_ARGS)

run_polygeist: polygeist.exe
	regressions-watchdog $(RUN_TIMEOUT) polygeist.time ./polygeist.exe $(PERF_ARGS)

run_openacc: openacc.gpu.exe
	regressions-watchdog $(RUN_TIMEOUT) openacc.time ./openacc.gpu.exe $(PERF_ARGS)

run_tulip: tulip.clang.exe tulip.gcc.exe tulip.clang.noelle.exe tulip.gcc.noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) tulip.icx.time ./tulip.icx.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) tulip.clang.time ./tulip.clang.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) tulip.gcc.time ./tulip.gcc.exe $(PERF_ARGS) 
	regressions-watchdog $(RUN_TIMEOUT) tulip.icx.noelle.time ./tulip.icx.noelle.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) tulip.clang.noelle.time ./tulip.clang.noelle.exe $(PERF_ARGS) 
	regressions-watchdog $(RUN_TIMEOUT) tulip.gcc.noelle.time ./tulip.gcc.noelle.exe $(PERF_ARGS) 

run_nvhpc_nvidia: nvhpc.gpu.exe nvhpc.gpu.noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) nvhpc.gpu.time ./nvhpc.gpu.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) nvhpc.gpu.noelle.time ./nvhpc.gpu.noelle.exe $(PERF_ARGS)

run_polygeist_nvidia: polygeist_nvtarget.exe
	regressions-watchdog $(RUN_TIMEOUT) polygeist_nvidia.time ./polygeist_nvtarget.exe $(PERF_ARGS)

run_polygeist_amd: polygeist_amd.exe
	regressions-watchdog $(RUN_TIMEOUT) polygeist_amd.time ./polygeist_amd.exe $(PERF_ARGS)

run_nvhpc_cpu: nvhpc.cpu.exe nvhpc.cpu.noelle.exe
	regressions-watchdog $(RUN_TIMEOUT) nvhpc.cpu.time ./nvhpc.cpu.exe $(PERF_ARGS)
	regressions-watchdog $(RUN_TIMEOUT) nvhpc.cpu.noelle.time ./nvhpc.cpu.noelle.exe $(PERF_ARGS)

clean:
	rm -rf *.ll *.bc *.exe debug *.o *.time loopIDtoSrc.txt debug_cudafe || true
